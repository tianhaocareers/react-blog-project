[{"/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/index.js":"1","/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/App.js":"2","/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/reportWebVitals.js":"3","/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/store/reducer/posts.js":"4","/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/mapToProps.js":"5","/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/store/action/actions.js":"6","/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/component/Login/Login.js":"7","/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/component/PostList/PostList.js":"8","/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/component/Register/Register.js":"9"},{"size":1277,"mtime":1607622873995,"results":"10","hashOfConfig":"11"},{"size":880,"mtime":1607970324757,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607573282914,"results":"13","hashOfConfig":"11"},{"size":1326,"mtime":1607666292190,"results":"14","hashOfConfig":"11"},{"size":516,"mtime":1607666627516,"results":"15","hashOfConfig":"11"},{"size":1676,"mtime":1607669116078,"results":"16","hashOfConfig":"11"},{"size":2054,"mtime":1607970624653,"results":"17","hashOfConfig":"11"},{"size":2461,"mtime":1607964512990,"results":"18","hashOfConfig":"11"},{"size":8215,"mtime":1607970562643,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"udpaow",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/index.js",[],["40","41"],"/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/App.js",["42"],"/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/reportWebVitals.js",[],"/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/store/reducer/posts.js",[],"/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/mapToProps.js",[],"/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/store/action/actions.js",[],"/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/component/Login/Login.js",[],"/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/component/PostList/PostList.js",["43","44","45","46","47","48","49","50","51"],"import React, { Component } from 'react'\nimport { mapStateToProps, mapDispatchToProps } from '../../mapToProps'\nimport { connect } from 'react-redux'\n\nimport './PostList.css';\nimport 'antd/dist/antd.css';\n\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\nclass PostList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            posts: [this.props.posts],\n            updatePost: { author: \"\", title: \"\", content: \"\" }\n        }\n    }\n\n    componentDidMount() {\n        console.warn(\"ComponentDidMount\")\n        this.props.onReadPost()\n        this.setState({ posts: this.props.posts })\n    }\n\n    render() {\n        console.warn(\"render\")\n        let posts = this.props.posts\n        let updateData = { author: \"update author\", title: \"update title\", content: \"update content\" }\n        let addData = { author: \"Third author\", title: \"Third title\", content: \"Third content\" }\n        let items = posts.map(data => {\n            return (\n                <div>\n                    <p key={data._id}>{data.author}, {data.title}, {data.content}, {data._id} </p>\n                    <button type=\"button\" onClick={() => { this.props.onUpdatePost(data._id, updateData) }}>Update</button>\n                    <button type=\"button\" onClick={() => this.props.onRemovePost(data._id)}>Delete</button>\n                </div>\n            )\n        })\n        return (\n            <>\n                <form >\n                    <label >Author: </label>\n                    <input type='text' onChange={(e) => console.log(e.target.value)} />\n                    <label >Title: </label>\n                    <input type='text' onChange={(e) => console.log(e.target.value)} />\n                    <label >Content: </label>\n                    <input type='text' onChange={(e) => console.log(e.target.value)} />\n                    <input type='submit' value='Submit' />\n                    <button type=\"button\" onClick={() => {\n                        this.props.onAddPost(addData)\n                        this.props.onReadPost()\n                    }}>Add</button>\n                </form>\n                <div>\n                    {items}\n                </div>\n\n            </>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostList)","/Users/tianhaoyang/github/interview/react-blog-project/frontend/src/component/Register/Register.js",["52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":16},{"ruleId":"57","severity":1,"message":"61","line":8,"column":24,"nodeType":"59","messageId":"60","endLine":8,"endColumn":34},{"ruleId":"57","severity":1,"message":"62","line":9,"column":10,"nodeType":"59","messageId":"60","endLine":9,"endColumn":22},{"ruleId":"57","severity":1,"message":"63","line":9,"column":24,"nodeType":"59","messageId":"60","endLine":9,"endColumn":38},{"ruleId":"57","severity":1,"message":"64","line":9,"column":40,"nodeType":"59","messageId":"60","endLine":9,"endColumn":60},{"ruleId":"57","severity":1,"message":"65","line":11,"column":9,"nodeType":"59","messageId":"60","endLine":11,"endColumn":16},{"ruleId":"57","severity":1,"message":"66","line":12,"column":9,"nodeType":"59","messageId":"60","endLine":12,"endColumn":15},{"ruleId":"57","severity":1,"message":"67","line":12,"column":17,"nodeType":"59","messageId":"60","endLine":12,"endColumn":24},{"ruleId":"57","severity":1,"message":"68","line":12,"column":26,"nodeType":"59","messageId":"60","endLine":12,"endColumn":32},{"ruleId":"57","severity":1,"message":"69","line":12,"column":34,"nodeType":"59","messageId":"60","endLine":12,"endColumn":39},{"ruleId":"57","severity":1,"message":"70","line":18,"column":7,"nodeType":"59","messageId":"60","endLine":18,"endColumn":25},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'PostList' is defined but never used.","Identifier","unusedVar","'Breadcrumb' is defined but never used.","'UserOutlined' is defined but never used.","'LaptopOutlined' is defined but never used.","'NotificationOutlined' is defined but never used.","'SubMenu' is assigned a value but never used.","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'AutoCompleteOption' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]